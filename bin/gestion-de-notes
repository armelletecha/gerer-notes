#!/usr/bin/env ruby
require 'gli'
begin # XXX: Remove this begin/rescue before distributing your app
require 'gestion-de-notes'
rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/gestion-de-notes` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/gestion-de-notes now"
  exit 64
end

include GLI::App

program_desc 'Describe your application here'

version GestionDeNotes::VERSION

subcommand_option_handling :normal
arguments :strict

desc 'Describe some switch here'
switch [:s,:switch]

desc 'Describe some flag here'
default_value 'the default'
arg_name 'The name of the argument'
flag [:f,:flagname]

desc 'Describe enregistrer_note here'
arg_name 'Describe arguments to enregistrer_note here'
command :enregistrer_note do |c|
  c.desc 'Describe a switch to enregistrer_note'
  c.switch :s

  c.desc 'Describe a flag to enregistrer_note'
  c.default_value 'default'
  c.flag :f
  c.action do |global_options,options,args|

    # Your command logic here
     
    # If you have any errors, just raise them
    # raise "that command made no sense"

    puts "enregistrer_note command ran"
  end
end

desc 'Describe moyenne_etudiants here'
arg_name 'Describe arguments to moyenne_etudiants here'
command :moyenne_etudiants do |c|
  c.action do |global_options,options,args|
    puts "moyenne_etudiants command ran"
  end
end

desc 'Describe informations_classe here'
arg_name 'Describe arguments to informations_classe here'
command :informations_classe do |c|
  c.action do |global_options,options,args|
    puts "informations_classe command ran"
  end
end

desc 'Describe attribuer_cote here'
arg_name 'Describe arguments to attribuer_cote here'
command :attribuer_cote do |c|
  c.action do |global_options,options,args|
    puts "attribuer_cote command ran"
  end
end

desc 'Describe afficher here'
arg_name 'Describe arguments to afficher here'
command :afficher do |c|
  c.action do |global_options,options,args|
    puts "afficher command ran"
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
