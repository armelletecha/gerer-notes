#!/usr/bin/env ruby
require 'gli'

begin # XXX: Remove this begin/rescue before distributing your app
require 'gestion-de-notes'
rescue LoadError
  STDERR.puts "In development, you need to use `bundle exec bin/gestion-de-notes` to run your app"
  STDERR.puts "At install-time, RubyGems will make sure lib, etc. are in the load path"
  STDERR.puts "Feel free to remove this message from bin/gestion-de-notes now"
  exit 64
end
include GLI::App

program_desc 'Gérer l enregistrerment des notes d etudiant'

version GestionDeNotes::VERSION

subcommand_option_handling :normal
arguments :strict

#desc 'Describe some switch here'
#switch [:s,:switch]

#option globale pour specifier le fichier a utiliser pour la liste des etudiants
desc 'utiliser la liste des etudiants par defaut ou un fichier specifie par l utilisateur'
default_value 'fichier liste_etudiants_defaut.csv'
arg_name 'The name of the argument'
flag [:l,:list]

#option globale pour specifier le fichier de description du groupe de cours
desc 'utiliser le fichier de description du groupe cours par defaut ou un fichier specifie par l utilisateur'
default_value 'fichier informations_cours_defaut.csv'
arg_name 'The name of the argument'
flag [:c,:cours]



#fonctionnalite 1 
desc 'Enregistrer note d etudiant'
arg_name 'code permanent de l etudiant, identifiant du devoir, note, liste des etudiants, fichier des travaux du groupe cours'

command :enregistrer_note do |c|

  c.action do |global_options,options,args|
	list = global_options[:list]
	cours = global_options[:cours]
	code = args.shift 
	iddevoir = args.shift
	 note = args.shift
	fichier_etudiants = "/home/miteuh/gestion-de-notes/lib/gestion-de-notes/liste_etudiants_defaut.csv"
	fichier_cours = "/home/miteuh/gestion-de-notes/lib/gestion-de-notes/informations_cours_defaut.csv"

#lecture des fichiers
	tableau_etudiants = GestionDeNotes::lecture_fichier(fichier_etudiants)
	tableau_travaux = GestionDeNotes::lecture_fichier_cours(fichier_cours)

#enregistrement de la note de l etudiant
	g = GestionDeNotes::Etudiant.enregistrer_note(code,iddevoir,note,tableau_etudiants,tableau_travaux)

#gestion des options globales
	tableau_etudiants = GestionDeNotes::lecture_fichier(list) if list
	tableau_travaux = GestionDeNotes::lecture_fichier_cours(cours) if cours
	
    puts g
  end
end

desc 'Calculer la moyenne de chaque étudiant de la classe '
arg_name ' '
command :moyenne_etudiants do |c|
  c.action do |global_options,options,args|
    puts "moyenne_etudiants command ran"
  end
end

desc 'Calcule la moyenne, l ecart type et la medianne de toute la classe'
arg_name ' '
command :informations_classe do |c|
  c.action do |global_options,options,args|
    puts "cote"
  end
end

desc 'Calculer le rang centile et attribuer les cotes'
arg_name ' '
command :attribuer_cote do |c|
  c.action do |global_options,options,args|
    puts "attribuer_cote command ran"
  end
end

desc 'afficher les informations de la classe et des etudiants'
arg_name 'Describe arguments to afficher here'
command :afficher do |c|
  c.desc 'Calculer les cotes selon les lettres que l utilisateur aurait fourni'
  c.default_value 'A B C D E F'
  c.flag :f


  c.action do |global_options,options,args|
    puts "afficher command ran"
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abort and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
